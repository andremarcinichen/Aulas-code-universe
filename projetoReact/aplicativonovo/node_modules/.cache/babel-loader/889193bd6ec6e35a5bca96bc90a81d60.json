{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\andre_ramos\\\\aulas-code-universe\\\\projetoReact\\\\aplicativonovo\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { func } from 'prop-types'; //EXEMPLO 1\n// function tick(){\n// const name ='andré';\n//   const element = ( \n//     <div>\n//       <h1>hello world</h1>\n//       <h2>it is {new Date().toLocaleTimeString()}.</h2>\n//     </div>\n//     <h1> Bom dia {name}</h1>;\n//   );\n//   ReactDOM.render( element,document.getElementById('root'));\n// }\n// setInterval(tick,900);\n// EXEMPLO 2\n// function formatName(user){\n//   return user.firstname + ' ' + user.lastname;\n// }\n// const user = {\n//   firstname:'André',\n//   lastname:'ramos',\n// }\n// // const element = (\n// //   <h1>bom dia {formatName(user)}!</h1>\n// // );\n// function getgreeting(user){\n//   if(user){\n//    return <h1>olá {formatName(user)}</h1>\n//   }\n//   return <h1> olá estranhos</h1>\n// }\n// ReactDOM.render(getgreeting(user),document.getElementById('root'));\n//EXEMPLO 3\n// function Welcome (props){\n//   return <h1> olá, {props.name}</h1>\n// }\n//   function Appjs(){\n//     return (\n//       <div>\n//         <Welcome name=\"andré\"/>\n//         <Welcome name=\"joao\"/>\n//         <Welcome name=\"wagner\"/>\n//       </div>\n//     )\n//   }\n// ReactDOM.render(<Appjs />, document.getElementById('root'));\n// exeplo 4\n// function FormatDate(date){\n//   return date.toLocaleDateString();\n// }\n// function Comment (props){\n//   return (\n//     <div className=\"comment\">\n//       <div className= \"userinfo\">\n//         <img\n//           className=\"avatar\"\n//           src={props.author.avatarUrl}\n//           alt={props.author.name}\n//           />\n//         <div className=\"userinfoName\">\n//           {props.author.name}\n//         </div>\n//       </div>\n//       <div className=\"comment-text\">{props.text}</div>\n//       <div className=\"comment-date\">{FormatDate(props.date)}</div>\n//     </div>\n//   )\n// }\n// const comment = {\n//   date: new Date(),\n//   text: \"aula de react\",\n//   author: {\n//     name:'andre',\n//     avatarUrl:'logo512.png',\n//   },\n// }\n// ReactDOM.render(\n//   <Comment\n//     date={comment.date}\n//     text= {comment.text}\n//     author ={comment.author}\n//     />,\n//  document.getElementById('root'));\n// exemplo 5\n// function sum(a,b){\n//   return (a+b)\n// }\n// function sub(a,b){\n//   return (a-b)\n// }\n// function subandsum(a,b,c,d){\n//   return (\n//     sum(a,b),\n//     sub(c,d)\n//   );\n// }\n// ReactDOM.render(\n//   subandsum(4,8,4,8),\n//   document.getElementById('root'));\n// exemplo 6\n// class Car extends React.Component{\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       marca:'Ford',\n//       carro: 'ka',\n//       cor: 'azul',\n//       ano: 2008,\n//     };\n//   }\n//     changeColor = () =>{\n//       this.setState({cor:\"vermelho\"})\n//     }\n//   render(){\n//     return (\n//       <div>\n//         <h1>Meu Carro é {this.state.marca} {this.state.carro}</h1>\n//         <p> Ele é {this.state.cor} de {this.state.ano}</p>\n//         <button onClick={this.changeColor}>outra cor</button>\n//       </div>\n//     )\n//   }\n// }\n// ReactDOM.render(\n//   <Car />,\n//     document.getElementById('root')\n// );\n///////////exemplo 7\n// class Clock extends React.Component {\n//   constructor(props){\n//     super(props);//executa o props\n//     this.state = {date: new Date()};\n//   }\n//   componentDidMount(){  // componente do react (função)\n//     this.timerID = setInterval(\n//       ()=> this.tick(), 1000 // cada 1 segundo usa funçao tick\n//     );\n//   }\n//   componentWillUnmount(){\n//     clearInterval(this.timer.ID); \n//   }\n//   tick(){\n//     this.setState({date:new Date()}); // tick joga o valor\n//   }\n//   render(){\n//     return(\n//       <div>\n//         <h1>hello world</h1>\n//         <h2>agora são{this.state.date.toLocaleTimeString()}</h2>\n//       </div>\n//     );\n//   }\n// }\n// ReactDOM.render(\n//   <Clock />,\n//     document.getElementById('root')\n// );\n///// exemplo 8\n// class Header extends React.Component {\n//     constructor(props){\n//       super(props);//executa o props\n//       this.state = {favoritecolor:\"vermelho\"};\n//     }\n//     static getDerivedStateFromProps(props){ /// faz com que valor nao altere\n//       return {favoritecolor: props.favcol};\n//     }\n//     changecolor = () => {\n//       this.setState({favoritecolor:\"azul\"})\n//     }\n//     render(){\n//       return(\n//         <div>\n//           <h1>hello world</h1>\n//           <h2>Minha cor favorita é: {this.state.favoritecolor}</h2>\n//           <button onClick={this.changecolor}>Trocar a Cor</button>\n//         </div>\n//       );\n//     }\n//   }\n//   ReactDOM.render(\n//     <Header favcol=\"amarelo\" />,\n//       document.getElementById('root')\n//   );\n// exemplo 9\n// class Header extends React.Component {\n//   constructor(props){\n//     super(props);//executa o props\n//     this.state = {favoritecolor:\"vermelho\"};\n//   }\n//   shouldComponentUpdate(){  //desabilita site inteiro\n//     return false;\n//   }\n//   changecolor = () => {\n//     this.setState({favoritecolor:\"azul\"})\n//   }\n//   render(){\n//     return(\n//       <div>\n//         <h1>hello world</h1>\n//         <h2>Minha cor favorita é: {this.state.favoritecolor}</h2>\n//         <button onClick={this.changecolor}>Trocar a Cor</button>\n//       </div>\n//     );\n//   }\n// }\n// ReactDOM.render(\n//   <Header favcol=\"amarelo\" />,\n//     document.getElementById('root')\n// );\n// exemplo 10\n// class Toggle extends React.Component {\n//   constructor (props){\n//     super(props);\n//     this.state = {isToggleOn: false};\n//     this.handleClick = this.handleClick.bind(this);\n//   }\n//   handleClick(){\n//     this.setState(prevState => ({\n//       isToggleOn: !prevState.isToggleOn\n//     }));\n//   }\n//   render(){\n//     return (\n//       <div>\n//         <button onClick={this.handleClick}>\n//           {this.state.isToggleOn ? 'ON' : 'OFF'}\n//         </button>\n//       </div>\n//     );\n//   }\n// }\n// ReactDOM.render(\n//   <Toggle />,\n//     document.getElementById('root'));\n// em tese letra minuscula é cosntante e letra maisucula é objeto\n//exemplo 111\n//  class Football extends React.Component{\n//    shoot(a){\n//      alert(a);\n//    }\n//    render (){\n//      return(\n//        <button onClick={this.shoot.bind(this, 'gol')}> CHUTAR</button>\n//      );\n//    }\n//  }\n// ReactDOM.render(\n//   <Football />,\n//     document.getElementById('root'));\n//exemplo  12\n//   class Form extends React.Component{\n//     constructor(props){\n//       super(props);\n//       this.state = {value: 'teste'};\n//       this.handleChange = this.handleChange.bind(this);\n//       this.handleSubmit = this.handleSubmit.bind(this);\n//     }\n//     handleChange(event){\n//       this.setState({value: event.target.value});\n//     }\n//     handleSubmit(event){\n//       alert('Nome: ' + this.state.value);\n//       event.preventDefault();\n//     }\n//     render(){\n//       return(\n//         <form onSubmit={this.handleSubmit}>\n//           <label>Nome: </label>\n//           {/* <input type=\"text\" value={this.state.value} onChange={this.handleChange} /><br/> */}\n//           {/* <textarea type=\"text\" value={this.state.value} onChange={this.handleChange} /><br/> */}\n//           <select value={this.state.value} onChange={this.handleChange}>\n//             <option value=\"teste\">1</option>\n//             <option value=\"teste2\">2</option>\n//             <option value=\"teste3\">3</option>\n//           </select><br/>\n//           <input type=\"submit\" />\n//         </form>\n//       );\n//     }\n//   }\n// ReactDOM.render(\n//   <Form />,\n//     document.getElementById('root'));\n// exemplo 13\n//   class Form extends React.Component{\n//     constructor(props){\n//       super(props);\n//       this.state = {\n//         isGoing:true,\n//         numberOfGuests:2,\n//       };\n//       this.handleChange = this.handleChange.bind(this);\n//     }\n//     handleChange(event){\n//       const target = event.target;\n//       const value = target.name ==='isGoing' ? target.checked : target.value;\n//       const name = target.name;\n//       this.setState({\n//       [name]: value\n//       });\n//     }\n//     render(){\n//       return(\n//         <form>\n//           <label>estão indo </label>\n//           <input\n//           name=\"isGoing\"\n//           type=\"checkbox\"\n//           checked={this.state.isGoing}\n//           onChange={this.handleChange}/>\n//         <br/>\n//           <label>\n//             <input\n//             name=\"numberOfGuests\"\n//             type=\"number\"\n//             value={this.state.numberOfGuests}\n//             onChange={this.handleChange}></input>\n//           </label>\n//         </form>\n//       );\n//     }\n//   }\n// ReactDOM.render(\n//   <Form />,\n//     document.getElementById('root'));\n// exemplo 14\n// css de java tira os \"-\" e coloca letra maiuscula.\n\nclass Header extends React.Component {\n  render() {\n    const style = {\n      color: 'green',\n      backgroundColor: 'DodgerBlue',\n      padding: '10px',\n      fontSize: '30px'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        color: \"red\",\n        backgroundColor: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }\n    }, \"Titulo Vermelho\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }\n    }, \" meu css interno\"));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Header, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 400,\n    columnNumber: 1\n  }\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/xampp/htdocs/andre_ramos/aulas-code-universe/projetoReact/aplicativonovo/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","func","Header","Component","render","style","color","backgroundColor","padding","fontSize","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,IAAT,QAAqB,YAArqBL,KAAK,CAACM,SAA3B,CAAoC;AAClCC,EAAAA,MAAM,GAAE;AACN,UAAMC,KAAK,GAAG;AACZC,MAAAA,KAAK,EAAE,OADK;AAEZC,MAAAA,eAAe,EAAE,YAFL;AAGZC,MAAAA,OAAO,EAAE,MAHG;AAIZC,MAAAA,QAAQ,EAAE;AAJE,KAAd;AAMA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,KAAK,EAAE;AAACH,QAAAA,KAAK,EAAC,KAAP;AAAcC,QAAAA,eAAe,EAAC;AAA9B,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAGE;AAAG,MAAA,KAAK,EAAEF,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,CADF;AASD;;AAjBiC;;AAmBpCP,QAAQ,CAACM,MAAT,eACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,EAEEM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF,E,CAaI;AACJ;AACA;;AACAX,aAAa,CAACY,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { func } from 'prop-types';\n\n//EXEMPLO 1\n// function tick(){\n  \n// const name ='andré';\n//   const element = ( \n    \n//     <div>\n//       <h1>hello world</h1>\n//       <h2>it is {new Date().toLocaleTimeString()}.</h2>\n//     </div>\n//     <h1> Bom dia {name}</h1>;\n//   );\n\n//   ReactDOM.render( element,document.getElementById('root'));\n// }\n// setInterval(tick,900);\n\n// EXEMPLO 2\n\n// function formatName(user){\n//   return user.firstname + ' ' + user.lastname;\n// }\n\n// const user = {\n//   firstname:'André',\n//   lastname:'ramos',\n// }\n// // const element = (\n// //   <h1>bom dia {formatName(user)}!</h1>\n// // );\n// function getgreeting(user){\n//   if(user){\n//    return <h1>olá {formatName(user)}</h1>\n//   }\n//   return <h1> olá estranhos</h1>\n// }\n// ReactDOM.render(getgreeting(user),document.getElementById('root'));\n\n\n//EXEMPLO 3\n\n// function Welcome (props){\n//   return <h1> olá, {props.name}</h1>\n// }\n//   function Appjs(){\n//     return (\n//       <div>\n//         <Welcome name=\"andré\"/>\n//         <Welcome name=\"joao\"/>\n//         <Welcome name=\"wagner\"/>\n//       </div>\n//     )\n//   }\n\n// ReactDOM.render(<Appjs />, document.getElementById('root'));\n\n// exeplo 4\n\n// function FormatDate(date){\n//   return date.toLocaleDateString();\n// }\n\n// function Comment (props){\n//   return (\n//     <div className=\"comment\">\n//       <div className= \"userinfo\">\n//         <img\n//           className=\"avatar\"\n//           src={props.author.avatarUrl}\n//           alt={props.author.name}\n//           />\n//         <div className=\"userinfoName\">\n//           {props.author.name}\n//         </div>\n//       </div>\n//       <div className=\"comment-text\">{props.text}</div>\n//       <div className=\"comment-date\">{FormatDate(props.date)}</div>\n//     </div>\n//   )\n// }\n\n// const comment = {\n//   date: new Date(),\n//   text: \"aula de react\",\n//   author: {\n//     name:'andre',\n//     avatarUrl:'logo512.png',\n//   },\n// }\n\n// ReactDOM.render(\n//   <Comment\n//     date={comment.date}\n//     text= {comment.text}\n//     author ={comment.author}\n//     />,\n//  document.getElementById('root'));\n\n// exemplo 5\n\n\n// function sum(a,b){\n//   return (a+b)\n// }\n\n// function sub(a,b){\n//   return (a-b)\n// }\n\n// function subandsum(a,b,c,d){\n//   return (\n//     sum(a,b),\n//     sub(c,d)\n//   );\n// }\n\n// ReactDOM.render(\n//   subandsum(4,8,4,8),\n//   document.getElementById('root'));\n\n// exemplo 6\n\n// class Car extends React.Component{\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       marca:'Ford',\n//       carro: 'ka',\n//       cor: 'azul',\n//       ano: 2008,\n//     };\n//   }\n\n//     changeColor = () =>{\n//       this.setState({cor:\"vermelho\"})\n//     }\n//   render(){\n//     return (\n//       <div>\n//         <h1>Meu Carro é {this.state.marca} {this.state.carro}</h1>\n//         <p> Ele é {this.state.cor} de {this.state.ano}</p>\n//         <button onClick={this.changeColor}>outra cor</button>\n//       </div>\n//     )\n//   }\n// }\n\n// ReactDOM.render(\n//   <Car />,\n//     document.getElementById('root')\n// );\n\n///////////exemplo 7\n\n// class Clock extends React.Component {\n//   constructor(props){\n//     super(props);//executa o props\n//     this.state = {date: new Date()};\n//   }\n//   componentDidMount(){  // componente do react (função)\n//     this.timerID = setInterval(\n//       ()=> this.tick(), 1000 // cada 1 segundo usa funçao tick\n//     );\n//   }\n//   componentWillUnmount(){\n//     clearInterval(this.timer.ID); \n//   }\n//   tick(){\n//     this.setState({date:new Date()}); // tick joga o valor\n//   }\n//   render(){\n//     return(\n//       <div>\n//         <h1>hello world</h1>\n//         <h2>agora são{this.state.date.toLocaleTimeString()}</h2>\n//       </div>\n//     );\n//   }\n// }\n\n\n// ReactDOM.render(\n//   <Clock />,\n//     document.getElementById('root')\n// );\n\n///// exemplo 8\n\n// class Header extends React.Component {\n//     constructor(props){\n//       super(props);//executa o props\n//       this.state = {favoritecolor:\"vermelho\"};\n//     }\n//     static getDerivedStateFromProps(props){ /// faz com que valor nao altere\n//       return {favoritecolor: props.favcol};\n//     }\n//     changecolor = () => {\n//       this.setState({favoritecolor:\"azul\"})\n//     }\n//     render(){\n//       return(\n//         <div>\n//           <h1>hello world</h1>\n//           <h2>Minha cor favorita é: {this.state.favoritecolor}</h2>\n//           <button onClick={this.changecolor}>Trocar a Cor</button>\n//         </div>\n//       );\n//     }\n//   }\n//   ReactDOM.render(\n//     <Header favcol=\"amarelo\" />,\n//       document.getElementById('root')\n//   );\n\n\n// exemplo 9\n\n  // class Header extends React.Component {\n  //   constructor(props){\n  //     super(props);//executa o props\n  //     this.state = {favoritecolor:\"vermelho\"};\n  //   }\n  //   shouldComponentUpdate(){  //desabilita site inteiro\n  //     return false;\n  //   }\n  //   changecolor = () => {\n  //     this.setState({favoritecolor:\"azul\"})\n  //   }\n  //   render(){\n  //     return(\n  //       <div>\n  //         <h1>hello world</h1>\n  //         <h2>Minha cor favorita é: {this.state.favoritecolor}</h2>\n  //         <button onClick={this.changecolor}>Trocar a Cor</button>\n  //       </div>\n  //     );\n  //   }\n  // }\n  // ReactDOM.render(\n  //   <Header favcol=\"amarelo\" />,\n  //     document.getElementById('root')\n  // );\n\n  // exemplo 10\n\n  // class Toggle extends React.Component {\n  //   constructor (props){\n  //     super(props);\n  //     this.state = {isToggleOn: false};\n  //     this.handleClick = this.handleClick.bind(this);\n  //   }\n  //   handleClick(){\n  //     this.setState(prevState => ({\n  //       isToggleOn: !prevState.isToggleOn\n  //     }));\n  //   }\n  //   render(){\n  //     return (\n  //       <div>\n  //         <button onClick={this.handleClick}>\n  //           {this.state.isToggleOn ? 'ON' : 'OFF'}\n  //         </button>\n  //       </div>\n  //     );\n  //   }\n  // }\n  // ReactDOM.render(\n  //   <Toggle />,\n  //     document.getElementById('root'));\n \n // em tese letra minuscula é cosntante e letra maisucula é objeto\n\n  //exemplo 111\n//  class Football extends React.Component{\n//    shoot(a){\n//      alert(a);\n//    }\n//    render (){\n//      return(\n//        <button onClick={this.shoot.bind(this, 'gol')}> CHUTAR</button>\n//      );\n//    }\n//  }\n\n// ReactDOM.render(\n//   <Football />,\n//     document.getElementById('root'));\n\n//exemplo  12\n\n//   class Form extends React.Component{\n//     constructor(props){\n//       super(props);\n//       this.state = {value: 'teste'};\n//       this.handleChange = this.handleChange.bind(this);\n//       this.handleSubmit = this.handleSubmit.bind(this);\n//     }\n//     handleChange(event){\n//       this.setState({value: event.target.value});\n//     }\n//     handleSubmit(event){\n//       alert('Nome: ' + this.state.value);\n//       event.preventDefault();\n//     }\n//     render(){\n//       return(\n//         <form onSubmit={this.handleSubmit}>\n//           <label>Nome: </label>\n//           {/* <input type=\"text\" value={this.state.value} onChange={this.handleChange} /><br/> */}\n//           {/* <textarea type=\"text\" value={this.state.value} onChange={this.handleChange} /><br/> */}\n//           <select value={this.state.value} onChange={this.handleChange}>\n//             <option value=\"teste\">1</option>\n//             <option value=\"teste2\">2</option>\n//             <option value=\"teste3\">3</option>\n//           </select><br/>\n//           <input type=\"submit\" />\n//         </form>\n//       );\n//     }\n//   }\n// ReactDOM.render(\n//   <Form />,\n//     document.getElementById('root'));\n\n// exemplo 13\n\n\n  //   class Form extends React.Component{\n  //     constructor(props){\n  //       super(props);\n  //       this.state = {\n  //         isGoing:true,\n  //         numberOfGuests:2,\n  //       };\n  //       this.handleChange = this.handleChange.bind(this);\n  //     }\n  //     handleChange(event){\n  //       const target = event.target;\n  //       const value = target.name ==='isGoing' ? target.checked : target.value;\n  //       const name = target.name;\n  //       this.setState({\n  //       [name]: value\n  //       });\n  //     }\n  //     render(){\n  //       return(\n  //         <form>\n  //           <label>estão indo </label>\n  //           <input\n  //           name=\"isGoing\"\n  //           type=\"checkbox\"\n  //           checked={this.state.isGoing}\n  //           onChange={this.handleChange}/>\n  //         <br/>\n  //           <label>\n  //             <input\n  //             name=\"numberOfGuests\"\n  //             type=\"number\"\n  //             value={this.state.numberOfGuests}\n  //             onChange={this.handleChange}></input>\n  //           </label>\n  //         </form>\n  //       );\n  //     }\n  //   }\n  // ReactDOM.render(\n  //   <Form />,\n  //     document.getElementById('root'));\n  \n// exemplo 14\n\n// css de java tira os \"-\" e coloca letra maiuscula.\nclass Header extends React.Component{\n  render(){\n    const style = {\n      color: 'green', \n      backgroundColor: 'DodgerBlue',\n      padding: '10px',\n      fontSize: '30px',\n    }\n    return(\n      <div>\n        <h1 style={{color:\"red\", backgroundColor:\"blue\"}}>Titulo Vermelho</h1>\n\n        <p style={style}> meu css interno</p>\n\n        \n      </div>\n    )\n  }\n}\nReactDOM.render(\n<Header />,\n  document.getElementById('root'));\n\n\n\n\n\n\n\n\n\n\n    // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}